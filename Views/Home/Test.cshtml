@{
    ViewData["Title"] = "Products Listing";
}

<div id="app">
    <div>
  <router-view></router-view>
  </div>
</div>

@section Scripts {
    <script>
        const Foo = {
            data : function() {
                return { products: null, loading: true }
            },
            template:
            `<div>
                <h1>Product Listing</h1>
                <div class="loading" v-if="loading">
                    Loading
                </div>
                <div v-if="products" v-for="product in products">
                    <span>
                        <router-link :to="'/product/' + product.id">Go to {{product.name}}</router-link>
                    </span>
                </div>
            </div>`,
    mounted() {
            var self = this
            self.loading = true
                axios
                    .get('/api/products')
                    .then(response => {
                        self.products = response.data
                        self.loading = false
                    }
                    )
    }
        }
const Bar = { 
    props: ['id'],
    data : 
    function() 
    {
        return { product: null, loading: true }
    },
    template: 
    `<div>
        <div class="loading" v-if="loading">
            Loading...
        </div>
        <div v-if="product">
            <h1>{{product.name}}</h1>
            <p>{{product.description}}</p>
            <div v-if="product.productFeatures.length > 0">
                <div v-for="feature in product.productFeatures">
                    <h4>{{feature.name}}</h4>
                    <p>{{feature.description}}</p>
                </div>
            </div>
        </div>
        <router-link to="/">Back to product list</router-link>
    </div>`,
     mounted() {
            var self = this
            console.log("WHAT WAS ID");
            console.log(self.id);
            axios
                    .get('/api/products/' + self.id + '?includeFeatures=true')
                    .then(response => {
                        self.product = response.data
                        self.loading = false
                    }
                    )
    }
}

const routes = [
  { path: '/', component: Foo},
  { path: '/product/:id', component: Bar, props: true }
]

const router = new VueRouter({
  routes // short for `routes: routes`
})

        var app = new Vue({
            router,
            el: '#app',
            data: function() {
         return  {
         }
    },
            mounted() {

            }
        });
    </script>
}