@{
    ViewData["Title"] = "Products Listing";
}

<div id="app">
    <router-view></router-view>
</div>

@section Scripts {
    <script>
        const List = {
            data : function() {
                return { products: null, loading: true }
            },
            template:
            `
            <div class="container"> 
                <div class="row">
                    <h1>Product Listing</h1>
                </div>
                <div class="loading row" v-if="!products">
                    Loading
                </div>
                <div v-else class="product-list">
                    <div v-for="i in Math.ceil(products.length / 3)" class="row product-row">
                        <div v-for="product in products.slice((i - 1) * 3, i * 3)" class="col-sm-4">
                            <router-link :to="'/product/' + product.id" class="non-hover-link">
                                <div class="card w-100 product-card">
                                    <img class="card-img-top" src="https://picsum.photos/200/100/?random" alt="Card image cap">
                                    <div class="card-body">
                                        <h5 class="card-title">{{product.name}}</h5>
                                        <p class="card-text">{{product.description}}</p>
                                    </div>
                                </div>
                            </router-link>
                        </div>
                    </div>
                </div>
            </div>
            `,
    mounted() {
            var self = this
            self.loading = true
                axios
                    .get('/api/products')
                    .then(response => {
                        self.products = response.data
                        self.loading = false
                    }
                    )
    }
        }
    const Product = { 
        props: ['id'],
        data : 
        function() 
        {
            return { product: null, loading: true, addingFeature: false, newName: null, newDescription: null }
        },
        template: 
        `<div>
            <div class="loading" v-if="loading">
                Loading...
            </div>
            <div v-if="product">
                <h1>{{product.name}}</h1>
                <p>{{product.description}}</p>
                <div v-if="product.productFeatures.length > 0">
                    <div v-for="i in Math.ceil((product.productFeatures.length + 1) / 3)" class="row product-row">
                        <div v-for="feature in product.productFeatures.slice((i - 1) * 3, i * 3)" class="col-sm-4">
                            <div class="card w-100 product-card">
                                <img class="card-img-top" src="https://picsum.photos/200/100/?random" alt="Card image cap">
                                <div class="card-body">
                                    <h5 class="card-title">{{feature.name}}</h5>
                                    <p class="card-text">{{feature.description}}</p>
                                    <button v-on:click="deleteFeature(feature.id)">Delete</button>
                                </div>
                            </div>
                        </div>
                        <div v-if="i == Math.ceil((product.productFeatures.length + 1) / 3)" class="col-sm-4">
                            <div class="card w-100 product-card" v-if="!addingFeature">
                                <img class="card-img-top" src="https://picsum.photos/200/100/?random" alt="Card image cap">
                                <div class="card-body">
                                    <h5 class="card-title">Add A New Feature</h5>
                                    <p class="card-text" v-on:click="addFeature()">Click Here</p>
                                </div>
                            </div>
                            <div class="card w-100 product-card" v-else>
                                <img class="card-img-top" src="https://picsum.photos/200/100/?random" alt="Card image cap">
                                <div class="card-body">
                                    <h5 class="card-title">Name: <input v-model="newName" placeholder="edit me"></h5>
                                    <p class="card-text" click="addFeature()">Description: <input v-model="newDescription" placeholder="edit me"></p>
                                    <button v-on:click="submitFeature()">Submit</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row product-row" v-else>
                    <div class="col-sm-4">
                        <div class="card w-100 product-card" v-if="!addingFeature">
                            <img class="card-img-top" src="https://picsum.photos/200/100/?random" alt="Card image cap">
                            <div class="card-body">
                                <h5 class="card-title">Add A New Feature</h5>
                                <p class="card-text" v-on:click="addFeature()">Click Here</p>
                            </div>
                        </div>
                        <div class="card w-100 product-card" v-else>
                            <img class="card-img-top" src="https://picsum.photos/200/100/?random" alt="Card image cap">
                            <div class="card-body">
                                <h5 class="card-title">Name: <input v-model="newName" placeholder="edit me"></h5>
                                <p class="card-text" click="addFeature()">Description: <input v-model="newDescription" placeholder="edit me"></p>
                                <button v-on:click="submitFeature()">Submit</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <router-link to="/">Back to product list</router-link>
        </div>`,
        mounted() {
            var self = this
            axios
                .get('/api/products/' + self.id + '?includeFeatures=true')
                .then(response => {
                    self.product = response.data
                    self.loading = false
                })
        },
        methods: {
            deleteFeature: function(feature_id) {
                var self = this;
                axios.delete('/api/products/' + this.id + '/productFeatures/' + feature_id).then(response => {
                    _.remove(self.product.productFeatures, function(pf) {
                        return pf.id == feature_id;
                    });
                    self.product.productFeatures.splice(1,1);
                    console.log(self.product.productFeatures);
                })
            },
            addFeature: function() {
                this.newName = null;
                this.newDescription = null;
                this.addingFeature = true;
            },
            submitFeature: function() {
                var self = this;
                axios.post('/api/products/' + this.id + '/productFeatures', {
                    "name":self.newName,
                    "description":self.newDescription
                }).then(response => {
                    self.addingFeature = false;
                    self.product.productFeatures.push(response.data);
                });
            }
        }
    }

    const routes = [
        { path: '/', component: List},
        { path: '/product/:id', component: Product, props: true }
    ]

    const router = new VueRouter({
        routes // short for `routes: routes`
    })

    var app = new Vue({
        router,
        el: '#app',
        data: function() {
            return  {}
        },
        mounted() {
        }
    });
</script>
}